name: mpc_mappo

# Standard MAPPO parameters adapted for MPC integration
# fixed_training_batch_size: 4096  # 固定的训练batch size
train_every: 64
num_minibatches: 32
ppo_epochs: 2
clip_param: 0.2
entropy_coef: 0.001
gae_lambda: 0.95
gamma: 0.995
max_grad_norm: 10.0
normalize_advantages: True

reward_weights: null # null means all 1.0
share_actor: false
critic_input: obs # `obs` or `state`

# MPC-specific parameters
mpc_config:
  # Prediction horizon
  horizon: 5
  
  # Time step (should match environment dt)
  dt: 0.016
  
  # Quadrotor physical parameters
  mass: 1.0
  gravity: 9.81
  inertia_diag: [0.01, 0.01, 0.02]  # Ixx, Iyy, Izz
  
  # State cost weights
  Q_pos: 1.0      # Position tracking weight
  Q_vel: 0.1      # Velocity weight
  Q_quat: 0.5     # Orientation weight
  Q_omega: 0.1    # Angular velocity weight
  
  # Control cost weights
  R_thrust: 0.01  # Thrust penalty
  R_torque: 0.01  # Torque penalty
  
  # Control limits
  max_thrust: 20.0
  max_torque: 1.0
  
  # Optimization parameters
  max_iters: 10
  lr_mpc: 0.1
  
  # Integration with MAPPO
  use_mpc_guidance: true
  mpc_guidance_weight: 0.3
  mpc_prediction_steps: 5
  
  # Action distribution for MPC predictions
  action_std_init: 0.1

actor:
  lr: 0.0005
  lr_scheduler:
  lr_scheduler_kwargs:

  # mlp architecture
  hidden_units: [256, 128, 128]
  layer_norm: true

  weight_decay: 0.0
  gain: 0.01

  vision_encoder: MobileNetV3Small # if applicable
  attn_encoder: PartialAttentionEncoder # if applicable
  use_orthogonal: true

critic:
  num_critics: 1
  value_norm:
    class: ValueNorm1
    kwargs:
      beta: 0.995

  lr: 0.0005
  lr_scheduler:
  lr_scheduler_kwargs:

  # mlp architecture
  hidden_units: [256, 128, 128]
  layer_norm: true

  weight_decay: 0.0
  gain: 0.01
  use_huber_loss: true
  huber_delta: 10

  vision_encoder: MobileNetV3Small # if applicable
  attn_encoder: PartialAttentionEncoder # if applicable
  use_feature_normalization: true
  use_orthogonal: true
